;4.13
;在一个函数中使用的一个约束，其是从当前环境不断向外环境寻找而找到的第一个约束
;取消绑定也应该使用相同的规则
(define (make-unbound! var env)
    (define (env-loop env)
        (define (scan vars vals lastvars lastvals)
            (cond ((null? vars)
                   (env-loop (enclosing-environment env)))
                  ((eq? var (car vars))
                   (set-cdr! last-vars (cdr vars))
                   (set-cdr! last-vals (cdr vals)))
                  (else (scan (cdr vars) (cdr vals)))))
        (if (eq? env the-empty-environment)
            (error "unbound var" var)
            (let ((frame (first-frame env))
                  (vars (frame-variables (first-frame env)))
                  (vals (frame-values (first-frame env))))
                (cond ((null? vars)
                       (env-loop (enclosing-environment env)))
                      ((eq? var (car vars))
                       (set-car! frame (cdr vars))
                       (set-cdr! frame (cdr vals)))
                      (else (scan (cdr vars) (cdr vals) vars vals))))))
    (env-loop env))