;4.16
;a)
(define (lookup-variable-value var env)
    (define (env-loop env)
        (define (scan vars vals)
            (cond ((null? vars) 
                   (env-loop (enclosing-environment env)))
                  ((eq? var (car vars))
                   (if (eq? (car vals) '*unassigned*)
                       (error "unassigned var" var)
                       (car vals)))
                  (else (scan (cdr vars) (cdr vals)))))
        (if (eq? env the-empty-environment)
            (error "can't find var" var)
            (let ((frame (first-frame env)))
                (scan (frame-variables frame)
                      (frame-values frame)))))
    (env-loop env))
;b)未测试
(define (scan-out-defines exps)
    (define (div exps defns exprs)
        (cond ((null? (cons defns exprs)))
              ((definition? (car exps))
                (div (cdr exps) (cons (car exps) defns) exprs))
              (else (div (cdr exps) defns (cons (car exps) exprs)))))
    (define (make-let-trans defns exprs)
        (let ((vars-exps (map (lambda (x) (list (definition-variable x) '*unassigned*)) defns))
              (set-exps (map (lambda (x) (set-car! x 'set!)) defns)))
            (list (cons 'let
                        (cons vars-exps
                              (append set-exps exprs))))))
    (let ((div-exps (div exps '() '())))
        (make-let-trans (car div-exps) (cdr div-exps))))
;c)
;放在make-procedure好，放在procedure-body会在每次使用函数时调用scan-out-defines，开销太大